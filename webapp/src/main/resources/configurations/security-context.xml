<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- Enable the @Secured annotation to secure service layer methods   -->
    <global-method-security pre-post-annotations="enabled"/>


    <http auto-config='true' use-expressions="true">
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
<!--         <form-login login-page="/login/" authentication-failure-url="/login/?error=true"/> -->
    </http>

	
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <user-service>
                <user name="user" password="user" authorities="ROLE_USER" />
                <user name="admin" password="admin" authorities="ROLE_ADMIN, ROLE_USER" />
                <user name="diveki" password="diveki" authorities="ROLE_ADMIN, ROLE_USER" />
                <user name="csuki" password="csuki" authorities="ROLE_ADMIN, ROLE_USER" />
                <user name="hpeter" password="hpeter" authorities="ROLE_ADMIN, ROLE_USER" />
            </user-service>
        </authentication-provider>
        <authentication-provider>
        	<password-encoder hash="sha" />
    		<jdbc-user-service data-source-ref="dataSource" users-by-username-query="select username,password,enabled from wuser where username=?" authorities-by-username-query="select u.username, r.role from wuser u, wgroup g, usergroups ug, role r where u.id = ug.user_id and g.id = ug.group_id and r.group_id = g.id and u.username =?" />
		</authentication-provider>
    </authentication-manager>
    
    
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <beans:property name="driverClassName" value="org.postgresql.Driver" />
	    <beans:property name="url" value="jdbc:postgresql://localhost:5433/wide" />
	    <beans:property name="username" value="postgres" />
	    <beans:property name="password" value="postgres" />
	</beans:bean>

</beans:beans>